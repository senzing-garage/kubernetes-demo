image:
  registry: ${DOCKER_REGISTRY_URL}
  tag: ${SENZING_DOCKER_IMAGE_VERSION_STREAM_LOADER}

imagePullSecrets:
  - name: ${DOCKER_REGISTRY_SECRET}

senzing:
  subcommand: rabbitmq
  databaseUrl: "sqlite3://na:na@/var/opt/senzing/sqlite/G2C.db"
  dataSource: TEST
  engineConfigurationJson: >-
    {
      "PIPELINE": {
        "CONFIGPATH": "/etc/opt/senzing",
        "RESOURCEPATH": "/opt/senzing/g2/resources",
        "SUPPORTPATH": "/opt/senzing/data"
      },
      "SQL": {
        "BACKEND": "HYBRID",
        "CONNECTION": "sqlite3://na:na@/var/opt/senzing/sqlite/G2C.db"
      },
      "C1": {
        "CLUSTER_SIZE": "1",
        "DB_1": "sqlite3://na:na@/var/opt/senzing/sqlite/G2C_RES.db"
      },
      "C2": {
        "CLUSTER_SIZE": "1",
        "DB_1": "sqlite3://na:na@/var/opt/senzing/sqlite/G2C_LIBFEAT.db"
      },
      "HYBRID": {
        "RES_FEAT": "C1",
        "RES_FEAT_EKEY": "C1",
        "RES_FEAT_LKEY": "C1",
        "RES_FEAT_STAT": "C1",
        "LIB_FEAT": "C2",
        "LIB_FEAT_HKEY": "C2"
      }
    }
  entityType: GENERIC
  logLevel: info
  monitoringPeriod: 60
  persistentVolumeClaim: senzing-persistent-volume-claim
  rabbitmqHost: ${DEMO_PREFIX}-rabbitmq
  rabbitmqPassword: passw0rd
  rabbitmqQueue: senzing-rabbitmq-queue
  rabbitmqUsername: user
  threadsPerProcess: 4
